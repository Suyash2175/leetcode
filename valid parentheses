#include <stack>
#include <string>

class Solution {
public:
    bool isValid(std::string s) {
        std::stack<char> stack;
        for (char c : s) {
            if (c == '(' || c == '[' || c == '{') {
                stack.push(c);
            } else {
                if (stack.empty()) return false; // More closing brackets than opening brackets
                char top = stack.top();
                if ((c == ')' && top != '(') || (c == ']' && top != '[') || (c == '}' && top != '{')) {
                    return false; // Closing bracket doesn't match the top of the stack
                }
                stack.pop(); // Matching pair found, pop the opening bracket
            }
        }
        return stack.empty(); // If stack is empty, all brackets are matched
    }
};
